document.addEventListener("DOMContentLoaded", () => {
  const perguntas = [
    {
      pergunta: "Cliente: Eu n√£o tenho esse dinheiro agora.",
      opcoes: [
        "Ent√£o me liga quando tiver.",
        "Vamos ver uma condi√ß√£o que caiba no seu or√ßamento hoje?",
        "Voc√™ precisa resolver isso agora!",
        "Podemos parcelar em pequenas partes.",
        "N√£o posso te ajudar."
      ],
      correta: 1,
      dica: "Demonstre empatia e ofere√ßa uma solu√ß√£o vi√°vel.",
      complemento: "Oferecer um acordo personalizado mostra compreens√£o e incentivo ao fechamento."
    },
    {
      pergunta: "Cliente: J√° tentei negociar antes e n√£o deu certo.",
      opcoes: [
        "Aqui √© diferente, explico tudo direitinho.",
        "Problema seu.",
        "Voc√™ devia ter tentado mais.",
        "Esse sistema √© novo.",
        "Negociar nem sempre d√° certo mesmo."
      ],
      correta: 0,
      dica: "Crie seguran√ßa e credibilidade para o cliente.",
      complemento: "Explicar bem e garantir transpar√™ncia fortalece a confian√ßa."
    },
    {
      pergunta: "Cliente: Quero pensar mais um pouco.",
      opcoes: [
        "Podemos fechar agora com esse desconto exclusivo!",
        "Voc√™ pensa demais.",
        "N√£o tenho tempo para esperar.",
        "Entendo, mas posso garantir essa condi√ß√£o s√≥ hoje.",
        "O tempo est√° passando."
      ],
      correta: 0,
      dica: "Mostre urg√™ncia sem pressionar.",
      complemento: "Criar senso de oportunidade ajuda o cliente a decidir mais r√°pido."
    },
    {
      pergunta: "Cliente: Estou no meio de uma reuni√£o.",
      opcoes: [
        "Entendo, posso agendar um novo contato?",
        "√â mais importante que pagar suas d√≠vidas?",
        "N√£o vou desligar at√© voc√™ me ouvir.",
        "Depois da reuni√£o a gente se fala.",
        "Pode ser amanh√£ ent√£o."
      ],
      correta: 0,
      dica: "Respeito gera abertura futura.",
      complemento: "Mostrar flexibilidade √© um diferencial no atendimento."
    },
    {
      pergunta: "Cliente: N√£o confio mais nesse sistema.",
      opcoes: [
        "Compreendo, posso explicar como funciona e garantir sua seguran√ßa.",
        "A culpa n√£o √© minha.",
        "Ent√£o fique sem pagar.",
        "Talvez o problema tenha sido outro banco.",
        "N√£o tem outra op√ß√£o al√©m dessa."
      ],
      correta: 0,
      dica: "Recupere a confian√ßa do cliente com empatia e informa√ß√£o.",
      complemento: "Transpar√™ncia e paci√™ncia s√£o chaves para reconquistar a confian√ßa."
    },
    {
      pergunta: "Cliente: Voc√™ est√° me ligando de novo?",
      opcoes: [
        "Estou sim, porque temos algo importante para resolver.",
        "Voc√™ n√£o atende, ent√£o tenho que insistir.",
        "√â obriga√ß√£o minha ligar v√°rias vezes.",
        "Faz parte do protocolo de cobran√ßa.",
        "Por favor, escute com aten√ß√£o dessa vez."
      ],
      correta: 0,
      dica: "Assuma o motivo da liga√ß√£o com foco na solu√ß√£o.",
      complemento: "Demonstrar prop√≥sito evita que o cliente se sinta pressionado."
    },
    {
      pergunta: "Cliente: Estou desempregado no momento.",
      opcoes: [
        "N√£o posso fazer nada por voc√™.",
        "Posso verificar a menor condi√ß√£o dispon√≠vel.",
        "Isso n√£o justifica a d√≠vida.",
        "Voc√™ devia ter pensado nisso antes.",
        "N√£o √© problema meu."
      ],
      correta: 1,
      dica: "Adapte a abordagem √† realidade do cliente.",
      complemento: "Oferecer alternativas demonstra empatia e aumenta a chance de fechar."
    }
  ];

  let indice = 0;
  let acertos = 0;

  const perguntaEl = document.getElementById("pergunta");
  const opcoesEl = document.getElementById("opcoes");
  const feedbackEl = document.getElementById("feedback");
  const quizContainer = document.getElementById("quiz-container");

  // üéµ √Åudios
  const somAcerto = new Audio("audio/acerto.mp3");
  const somErro = new Audio("audio/erro.mp3");

  // üìä Barra de progresso
  const progresso = document.createElement("div");
  progresso.style.height = "8px";
  progresso.style.background = "#ddd";
  progresso.style.borderRadius = "4px";
  progresso.style.marginBottom = "1rem";
  progresso.innerHTML = `
    <div id="barra-progresso" style="height: 100%; width: 0%; background: #cc092f; border-radius: 4px; transition: width 0.4s;"></div>
  `;
  quizContainer.prepend(progresso);

  function atualizarBarra() {
    const barra = document.getElementById("barra-progresso");
    const perc = ((indice / perguntas.length) * 100).toFixed(0);
    barra.style.width = `${perc}%`;
  }

  function mostrarResultadoFinal() {
    const desempenho = ((acertos / perguntas.length) * 100).toFixed(0);
    let mensagemFinal = "";

    if (desempenho == 100) {
      mensagemFinal = "üåü Excelente! Voc√™ acertou todas!";
    } else if (desempenho >= 60) {
      mensagemFinal = "üëç Muito bom! Voc√™ est√° no caminho certo.";
    } else if (desempenho >= 40) {
      mensagemFinal = "üßê Quase l√°! Treine mais um pouco.";
    } else {
      mensagemFinal = "üí° N√£o desanime! Praticar leva √† perfei√ß√£o.";
    }

    quizContainer.innerHTML = `
      <h2>‚úÖ Resultado Final</h2>
      <p style="font-size:1.2rem;"><strong>Pontua√ß√£o:</strong> ${acertos}/${perguntas.length}</p>
      <p style="margin: 1rem 0;">${mensagemFinal}</p>
      <button onclick="location.reload()" style="background:#cc092f;color:white;border:none;padding:0.75rem 1.5rem;border-radius:8px;font-weight:bold;cursor:pointer;">üîÅ Jogar novamente</button>
    `;
  }

  function mostrarPergunta() {
    atualizarBarra();

    const atual = perguntas[indice];
    perguntaEl.textContent = atual.pergunta;
    opcoesEl.innerHTML = "";
    feedbackEl.innerHTML = "";

    atual.opcoes.forEach((opcao, i) => {
      const btn = document.createElement("button");
      btn.textContent = opcao;
      btn.className = "opcao";
      btn.style.padding = "0.75rem 1.25rem";
      btn.style.margin = "0.5rem 0";
      btn.style.borderRadius = "8px";
      btn.style.border = "none";
      btn.style.cursor = "pointer";
      btn.style.width = "100%";
      btn.style.textAlign = "left";
      btn.style.backgroundColor = "#f0f0f0";
      btn.style.fontSize = "1rem";
      btn.onmouseover = () => (btn.style.backgroundColor = "#e0e0e0");
      btn.onmouseout = () => (btn.style.backgroundColor = "#f0f0f0");

      btn.onclick = () => {
        const botoes = document.querySelectorAll(".opcao");
        botoes.forEach(b => b.disabled = true);

        if (i === atual.correta) {
          somAcerto.play();
          btn.style.backgroundColor = "#198754";
          btn.style.color = "#fff";
          feedbackEl.innerHTML = `‚úÖ <strong>Correto:</strong> ${atual.complemento}`;
          acertos++;
        } else {
          somErro.play();
          btn.style.backgroundColor = "#dc3545";
          btn.style.color = "#fff";
          feedbackEl.innerHTML = `‚ùå <strong>Incorreto:</strong> ${atual.dica}`;
        }

        if (indice < perguntas.length - 1) {
          indice++;
          setTimeout(mostrarPergunta, 2500);
        } else {
          setTimeout(mostrarResultadoFinal, 3000);
        }
      };

      opcoesEl.appendChild(btn);
    });
  }

  mostrarPergunta();
});
